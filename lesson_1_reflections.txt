🤔思考：查看文件的两个版本之间的差异如何帮助你了解引入的错误？

 1. old version 的文件一般是运行成功的，没有大的错误的
 2. new version 和 old version 之间的差异就有可能是引入 bug 的地方

🤔思考：从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？

 1. 当想要回退到之前某个版本时，能立刻回退
 2. 方便比较历史记录之间的差异

🤔思考：你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？

 1. 手动创建提交：
 	1. 每一次提交都有意义
 	2. 提交历史不会很乱
 	3. 依赖于用户的使用
 2. 自动保存：
 	1. 会有很多无意义的提交
 	2. 历史记录比较乱
 	3. 不依赖用户

🤔思考：为何一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Doc）单独对待每个文件？

 1. 基于他们各自的使用场景，Google Doc 多数情况下都是针对单个文件的修改，而 Git 很多情况下需要针对多个文件的修改

🤔思考：如何使用命令 git log 和 git diff 来查看文件的历史记录

 1. 使用 git log 查看文件修改记录
 2. 使用 git diff commitId1 commitId2 查看具体的修改

 🤔思考：使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？

  1. 及时 commit 自己想要保存的进度